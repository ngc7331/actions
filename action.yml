name: docker-build
inputs:
  name:
    required: true
  version:
    required: true
  suffix:
    required: false
    default: ""
  suffix_detailed:
    required: false
    default: ""
  is_latest:
    required: false
    default: true
  is_latest_no_suffix:
    required: false
    default: false
  is_nightly:
    required: false
    default: false
  file:
    required: false
    default: "./Dockerfile"
  context:
    required: false
    default: "."
  platforms:
    required: false
    default: "linux/amd64"
  build_args:
    required: false
    default: ""

  DOCKERHUB_USER:
    required: true
  DOCKERHUB_PASS:
    required: true
  GITHUB_TOKEN:
    required: true

runs:
  using: "composite"
  steps:
    - name: Generate Docker metadata
      id: metadata
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ inputs.DOCKERHUB_USER }}/${{ inputs.name }}
          ghcr.io/${{ github.repository_owner }}/docker-${{ inputs.name }}
        tags: |
          latest,enable=${{ inputs.is_latest_no_suffix }}
          latest,enable=${{ inputs.is_latest }},suffix=${{ inputs.suffix }}
          nightly,enable=${{ inputs.is_nightly }},suffix=${{ inputs.suffix }}
          ${{ inputs.version }},suffix=${{ inputs.suffix_detailed }}
        flavor: |
          latest=false
        labels: |
          maintainer=${{ github.repository_owner }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.DOCKERHUB_USER }}
        password: ${{ inputs.DOCKERHUB_PASS }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ inputs.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        file: ${{ inputs.file }}
        context: ${{ inputs.context }}
        platforms: ${{ inputs.platforms }}
        push: true
        tags: ${{ steps.metadata.outputs.tags }}
        labels: ${{ steps.metadata.outputs.labels }}
        build-args: ${{ inputs.build_args }}
